const mysql = require('mysql2/promise');
const _ = require('lodash');
const { mySQLConfig } = require('../assets/configs');

const getProducts = () => {
    return new Promise( async (resolve, reject) => {
        try {
            let QUERY = 'SELECT * FROM product';

            // Connection Made //
            const connection = await mysql.createConnection(mySQLConfig);
            // const conn = new mysql.createConnection(mySQLConfig);
        
            const [rows, fields] = await connection.execute(QUERY);
            console.log('Data: ', rows);

            let data = JSON.stringify(rows);

            return resolve(data);
        } catch (error) {
            console.log('!! Error while DB Handling !!');
        }
    })
};

const getProductsByID = (product_ID_Array) => {
    return new Promise( async (resolve, reject) => {
        try {
            let QUERY = 'SELECT * FROM product WHERE product_ID IN ' + '(' + product_ID_Array.join(',') + ')'; ;

            // Connection Made //
            const connection = await mysql.createConnection(mySQLConfig);
            // const conn = new mysql.createConnection(mySQLConfig);

            console.log('Connection established successfully');
        
            const [rows, fields] = await connection.execute(QUERY);
            console.log('Data: ', rows);

            return resolve(JSON.stringify(rows));
        } catch (error) {
            console.log('!! Error while DB Handling !!', error);
            reject('Problem occure');
        }
    })
};

const getProductsByCategory = (category) => {
    return new Promise( async (resolve, reject) => {
        try {
            let category_split = category.split(',');

            let QUERY = `
                SELECT *
                FROM product AS p
                WHERE product_category_ID = (
                    SELECT pc.product_category_ID
                    FROM product_category AS pc, product_parent_category AS ppc
                    WHERE ppc.product_parent_category_ID = pc.product_parent_category_ID
                    AND ppc.product_parent_category_ID = ${category_split[0]}
                    AND pc.product_category_ID = ${category_split[1]}
                )
                `;

            // Connection Made //
            const connection = await mysql.createConnection(mySQLConfig);
        
            const [rows, fields] = await connection.execute(QUERY);
            console.log('Data: ', rows);

            return resolve(JSON.stringify(rows));
        } catch (error) {
            console.log('!! Error while DB Handling !!', error);
            reject('Problem occure');
        }
    })
};

const getProductsCategoryList = () => {
    return new Promise( async (resolve, reject) => {
        try {
            let QUERY = `
                SELECT * 
                FROM 
                product_parent_category as ppc,
                product_category as pc
                WHERE
                ppc.product_parent_category_ID = pc.product_parent_category_ID;
            `;

            // Connection Made //
            const connection = await mysql.createConnection(mySQLConfig);
        
            const [rows, fields] = await connection.execute(QUERY);

            // let categoryList = [];
            // rows.map(item => {
            //     !_.includes(categoryList, item) && categoryList.push(item.);
            // });

            console.log('Data: ', rows);

            return resolve(JSON.stringify(rows));
        } catch (error) {
            console.log('!! Error while DB Handling !!', error);
            reject('Problem occure');
        }
    })
};

module.exports = {
    getProductsCategoryList,
    getProducts,
    getProductsByID,
    getProductsByCategory
};